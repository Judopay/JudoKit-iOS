default_platform(:ios)

platform :ios do
  before_all do
    setup_circle_ci
  end

  desc "Build and run tests"
  lane :test do
    scan
  end

  desc "Ad-hoc build for ObjectiveCExampleApp"
  lane :adhoc_objc do
    match(type: "adhoc", app_identifier: ["com.judo.JudoPayDemoObjC", "com.judo.JudoPayDemoObjC.ObjectiveCExampleAppUITests"])
    # gym(workspace: "ObjectiveCExampleApp.xcworkspace", scheme: "ObjectiveCExampleAppUITests", export_method: "ad-hoc", xcodebuild_command: "xcodebuild clean build-for-testing", skip_package_ipa: true)
    run_tests(derived_data_path: "DerivedData", 
    build_for_testing: true, 
    workspace: "ObjectiveCExampleApp.xcworkspace", 
    scheme: "ObjectiveCExampleAppUITests",
    destination: "generic/platform=iOS",
    sdk: "iphoneos",
    buildlog_path: "buildlog.txt",
    xcodebuild_command: "env NSUnbufferedIO=YES xcodebuild -allowProvisioningUpdates") 
  end
  
  lane :generate_code_quality_reports do
    sh("cd .. && ./clang-format.sh lint") # check code format
    scan(use_clang_report_name: true)     # run tests and generate reports
    oclint(report_type: 'html')           # run static code analyzer
    slather                               # generate code coverage reports
  end
end